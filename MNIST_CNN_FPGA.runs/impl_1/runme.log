
*** Running vivado
    with args -log top_cnn.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source top_cnn.tcl -notrace


****** Vivado v2019.1 (64-bit)
  **** SW Build 2552052 on Fri May 24 14:49:42 MDT 2019
  **** IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
    ** Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

source top_cnn.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'f:/ip_repo/myMNIST_CNN_1.0'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.1/data/ip'.
Command: link_design -top top_cnn -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint 'f:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/sources_1/ip/ila_0/ila_0.dcp' for cell 'cnn_core/crazy_top_ila'
INFO: [Netlist 29-17] Analyzing 5923 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Chipscope 16-324] Core: cnn_core/crazy_top_ila UUID: 2584140e-273f-500a-a1b0-55639665f23b 
Parsing XDC File [f:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/sources_1/ip/ila_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'cnn_core/crazy_top_ila/inst'
Finished Parsing XDC File [f:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/sources_1/ip/ila_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'cnn_core/crazy_top_ila/inst'
Parsing XDC File [f:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/sources_1/ip/ila_0/ila_v6_2/constraints/ila.xdc] for cell 'cnn_core/crazy_top_ila/inst'
Finished Parsing XDC File [f:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/sources_1/ip/ila_0/ila_v6_2/constraints/ila.xdc] for cell 'cnn_core/crazy_top_ila/inst'
Parsing XDC File [F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/constrs_1/imports/01_SoC/Zybo-Z7-Master.xdc]
Finished Parsing XDC File [F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.srcs/constrs_1/imports/01_SoC/Zybo-Z7-Master.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.014 . Memory (MB): peak = 893.031 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 956 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRLC32E, SRL16E): 956 instances

12 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 893.031 ; gain = 580.387
INFO: [Common 17-600] The following parameters have non-default value.
tcl.collectionResultDisplayLimit
INFO: [Vivado_Tcl 4-424] Cannot write hardware definition file as there are no IPI block design hardware handoff files present
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.714 . Memory (MB): peak = 895.129 ; gain = 2.098

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 1c48f790a

Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 1491.137 ; gain = 596.008

Starting Logic Optimization Task

Phase 1 Generate And Synthesize Debug Cores
INFO: [Chipscope 16-329] Generating Script for core instance : dbg_hub 
INFO: [IP_Flow 19-3806] Processing IP xilinx.com:ip:xsdbm:3.0 for cell dbg_hub_CV.
INFO: [Chipscope 16-220] Re-using generated and synthesized IP, "xilinx.com:ip:xsdbm:3.0", from Vivado IP cache entry "59b16ee0fb889aa7".
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.045 . Memory (MB): peak = 1685.844 ; gain = 0.000
Phase 1 Generate And Synthesize Debug Cores | Checksum: 1c304a81d

Time (s): cpu = 00:00:09 ; elapsed = 00:00:16 . Memory (MB): peak = 1685.844 ; gain = 41.598

Phase 2 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 2 Retarget | Checksum: 247954510

Time (s): cpu = 00:00:12 ; elapsed = 00:00:18 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-389] Phase Retarget created 18 cells and removed 331 cells
INFO: [Opt 31-1021] In phase Retarget, 194 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 3 Constant propagation | Checksum: 2723129f0

Time (s): cpu = 00:00:13 ; elapsed = 00:00:19 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 44 cells
INFO: [Opt 31-1021] In phase Constant propagation, 258 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 Sweep
Phase 4 Sweep | Checksum: 2790b22bf

Time (s): cpu = 00:00:15 ; elapsed = 00:00:20 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-389] Phase Sweep created 1 cells and removed 1195 cells
INFO: [Opt 31-1021] In phase Sweep, 2472 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 5 BUFG optimization
Phase 5 BUFG optimization | Checksum: 2790b22bf

Time (s): cpu = 00:00:15 ; elapsed = 00:00:21 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 6 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 6 Shift Register Optimization | Checksum: 2790b22bf

Time (s): cpu = 00:00:16 ; elapsed = 00:00:22 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 7 Post Processing Netlist
Phase 7 Post Processing Netlist | Checksum: 2535710cd

Time (s): cpu = 00:00:16 ; elapsed = 00:00:22 . Memory (MB): peak = 1685.844 ; gain = 41.598
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 137 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              18  |             331  |                                            194  |
|  Constant propagation         |               0  |              44  |                                            258  |
|  Sweep                        |               1  |            1195  |                                           2472  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            137  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.089 . Memory (MB): peak = 1685.844 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 194a00f6a

Time (s): cpu = 00:00:17 ; elapsed = 00:00:23 . Memory (MB): peak = 1685.844 ; gain = 41.598

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.326 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 57 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 4 WE to EN ports
Number of BRAM Ports augmented: 62 newly gated: 4 Total Ports: 114
Number of Flops added for Enable Generation: 6

Ending PowerOpt Patch Enables Task | Checksum: 1c5a9ac25

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.322 . Memory (MB): peak = 2163.039 ; gain = 0.000
Ending Power Optimization Task | Checksum: 1c5a9ac25

Time (s): cpu = 00:00:24 ; elapsed = 00:00:13 . Memory (MB): peak = 2163.039 ; gain = 477.195

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: 19fb33538

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 2163.039 ; gain = 0.000
Ending Final Cleanup Task | Checksum: 19fb33538

Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 2163.039 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 2163.039 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 19fb33538

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:59 ; elapsed = 00:00:52 . Memory (MB): peak = 2163.039 ; gain = 1270.008
INFO: [Common 17-600] The following parameters have non-default value.
tcl.collectionResultDisplayLimit
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.019 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.042 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file top_cnn_drc_opted.rpt -pb top_cnn_drc_opted.pb -rpx top_cnn_drc_opted.rpx
Command: report_drc -file top_cnn_drc_opted.rpt -pb top_cnn_drc_opted.pb -rpx top_cnn_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-240] Debug cores have already been implemented
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 17e9a39e9

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2163.039 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: de941495

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: f6a0a341

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: f6a0a341

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: f6a0a341

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 188a2106f

Time (s): cpu = 00:00:22 ; elapsed = 00:00:16 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-76] Pass 1. Identified 1 candidate net for fanout optimization.
INFO: [Physopt 32-81] Processed net cnn_core/global_ctrl/Image_addr[0]. Replicated 11 times.
INFO: [Physopt 32-232] Optimized 1 net. Created 11 new instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 1 net or cell. Created 11 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.045 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Physopt 32-64] No nets found for fanout-optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-46] Identified 6 candidate nets for critical-cell optimization.
INFO: [Physopt 32-571] Net cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/line_buffer5_reg[4][11]_0[10] was not replicated.
INFO: [Physopt 32-571] Net cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/line_buffer5_reg[4][11]_0[8] was not replicated.
INFO: [Physopt 32-571] Net cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/line_buffer5_reg[4][11]_0[4] was not replicated.
INFO: [Physopt 32-571] Net cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/line_buffer5_reg[4][11]_0[7] was not replicated.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-456] No candidate cells for DSP register optimization found in the design.
INFO: [Physopt 32-775] End 2 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-677] No candidate cells for Shift Register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-526] No candidate cells for BRAM register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.019 . Memory (MB): peak = 2163.039 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


----------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                  |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
----------------------------------------------------------------------------------------------------------------------------------------
|  Very High Fanout              |           11  |              0  |                     1  |           0  |           1  |  00:00:01  |
|  Fanout                        |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Critical Cell                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Shift Register                |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  BRAM Register                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  HD Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                         |           11  |              0  |                     1  |           0  |           7  |  00:00:01  |
----------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 12e64d490

Time (s): cpu = 00:01:10 ; elapsed = 00:00:46 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 2.2 Global Placement Core | Checksum: 1ea9fa433

Time (s): cpu = 00:01:16 ; elapsed = 00:00:50 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 2 Global Placement | Checksum: 1ea9fa433

Time (s): cpu = 00:01:16 ; elapsed = 00:00:50 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1deb13a2b

Time (s): cpu = 00:01:20 ; elapsed = 00:00:52 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1b3b6d592

Time (s): cpu = 00:01:28 ; elapsed = 00:00:57 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1b3bc18eb

Time (s): cpu = 00:01:28 ; elapsed = 00:00:58 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 18c3c3318

Time (s): cpu = 00:01:28 ; elapsed = 00:00:58 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 1357adaf3

Time (s): cpu = 00:01:37 ; elapsed = 00:01:03 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 13bfa3c0e

Time (s): cpu = 00:01:50 ; elapsed = 00:01:17 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 10ff6fb7b

Time (s): cpu = 00:01:52 ; elapsed = 00:01:19 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 2104277bd

Time (s): cpu = 00:01:53 ; elapsed = 00:01:19 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 3.9 Fast Optimization
Phase 3.9 Fast Optimization | Checksum: 201e48a15

Time (s): cpu = 00:02:04 ; elapsed = 00:01:27 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 201e48a15

Time (s): cpu = 00:02:04 ; elapsed = 00:01:28 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 12d879ca4

Phase 4.1.1.1 BUFG Insertion
INFO: [Place 46-33] Processed net cnn_core/rstn_i0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net cnn_core/global_ctrl/PE_en, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net cnn_core/global_ctrl/Slide_trigger, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 3 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 3, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Phase 4.1.1.1 BUFG Insertion | Checksum: 12d879ca4

Time (s): cpu = 00:02:17 ; elapsed = 00:01:36 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Place 30-746] Post Placement Timing Summary WNS=-0.380. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 1c6a42ea7

Time (s): cpu = 00:02:48 ; elapsed = 00:02:02 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 4.1 Post Commit Optimization | Checksum: 1c6a42ea7

Time (s): cpu = 00:02:48 ; elapsed = 00:02:02 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1c6a42ea7

Time (s): cpu = 00:02:49 ; elapsed = 00:02:02 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 1c6a42ea7

Time (s): cpu = 00:02:49 ; elapsed = 00:02:03 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.029 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: 191bcff56

Time (s): cpu = 00:02:49 ; elapsed = 00:02:03 . Memory (MB): peak = 2163.039 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 191bcff56

Time (s): cpu = 00:02:49 ; elapsed = 00:02:03 . Memory (MB): peak = 2163.039 ; gain = 0.000
Ending Placer Task | Checksum: e42bc43b

Time (s): cpu = 00:02:49 ; elapsed = 00:02:03 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
94 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:02:53 ; elapsed = 00:02:05 . Memory (MB): peak = 2163.039 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.017 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file top_cnn_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.024 . Memory (MB): peak = 2163.039 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file top_cnn_utilization_placed.rpt -pb top_cnn_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file top_cnn_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.661 . Memory (MB): peak = 2163.039 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: ca06f01b ConstDB: 0 ShapeSum: 1a24d420 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 15cb8ad87

Time (s): cpu = 00:00:25 ; elapsed = 00:00:16 . Memory (MB): peak = 2163.039 ; gain = 0.000
Post Restoration Checksum: NetGraph: aa247e88 NumContArr: b2942eff Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 15cb8ad87

Time (s): cpu = 00:00:25 ; elapsed = 00:00:16 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 15cb8ad87

Time (s): cpu = 00:00:25 ; elapsed = 00:00:17 . Memory (MB): peak = 2163.039 ; gain = 0.000

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 15cb8ad87

Time (s): cpu = 00:00:25 ; elapsed = 00:00:17 . Memory (MB): peak = 2163.039 ; gain = 0.000
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1b2135e10

Time (s): cpu = 00:00:39 ; elapsed = 00:00:25 . Memory (MB): peak = 2174.320 ; gain = 11.281
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.428 | TNS=-27.655| WHS=-0.196 | THS=-420.645|


Phase 2.5 Update Timing for Bus Skew

Phase 2.5.1 Update Timing
Phase 2.5.1 Update Timing | Checksum: 21a466cbb

Time (s): cpu = 00:00:49 ; elapsed = 00:00:32 . Memory (MB): peak = 2383.609 ; gain = 220.570
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.428 | TNS=-20.254| WHS=N/A    | THS=N/A    |

Phase 2.5 Update Timing for Bus Skew | Checksum: 1906b936c

Time (s): cpu = 00:00:50 ; elapsed = 00:00:32 . Memory (MB): peak = 2383.609 ; gain = 220.570
Phase 2 Router Initialization | Checksum: 22e1acf8b

Time (s): cpu = 00:00:50 ; elapsed = 00:00:32 . Memory (MB): peak = 2383.609 ; gain = 220.570

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.00605778 %
  Global Horizontal Routing Utilization  = 0.00701487 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 45560
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 45547
  Number of Partially Routed Nets     = 13
  Number of Node Overlaps             = 26


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 10a8086ac

Time (s): cpu = 00:01:05 ; elapsed = 00:00:41 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 14964
 Number of Nodes with overlaps = 6859
 Number of Nodes with overlaps = 3344
 Number of Nodes with overlaps = 1452
 Number of Nodes with overlaps = 786
 Number of Nodes with overlaps = 257
 Number of Nodes with overlaps = 125
 Number of Nodes with overlaps = 21
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.963 | TNS=-181.519| WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1ad691e14

Time (s): cpu = 00:03:06 ; elapsed = 00:01:52 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 1493
 Number of Nodes with overlaps = 916
 Number of Nodes with overlaps = 515
 Number of Nodes with overlaps = 320
 Number of Nodes with overlaps = 193
 Number of Nodes with overlaps = 129
 Number of Nodes with overlaps = 84
 Number of Nodes with overlaps = 43
 Number of Nodes with overlaps = 24
 Number of Nodes with overlaps = 21
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.864 | TNS=-157.511| WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1094b471c

Time (s): cpu = 00:03:45 ; elapsed = 00:02:20 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 4.3 Global Iteration 2
 Number of Nodes with overlaps = 1735
 Number of Nodes with overlaps = 1423
 Number of Nodes with overlaps = 680
 Number of Nodes with overlaps = 465
 Number of Nodes with overlaps = 302
 Number of Nodes with overlaps = 165
 Number of Nodes with overlaps = 95
Phase 4.3 Global Iteration 2 | Checksum: 1c1b53932

Time (s): cpu = 00:04:22 ; elapsed = 00:02:42 . Memory (MB): peak = 2383.609 ; gain = 220.570
Phase 4 Rip-up And Reroute | Checksum: 1c1b53932

Time (s): cpu = 00:04:22 ; elapsed = 00:02:42 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: eea228c5

Time (s): cpu = 00:04:25 ; elapsed = 00:02:44 . Memory (MB): peak = 2383.609 ; gain = 220.570
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.850 | TNS=-143.203| WHS=N/A    | THS=N/A    |

 Number of Nodes with overlaps = 0
Phase 5.1 Delay CleanUp | Checksum: c98c0dd5

Time (s): cpu = 00:04:26 ; elapsed = 00:02:44 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: c98c0dd5

Time (s): cpu = 00:04:26 ; elapsed = 00:02:45 . Memory (MB): peak = 2383.609 ; gain = 220.570
Phase 5 Delay and Skew Optimization | Checksum: c98c0dd5

Time (s): cpu = 00:04:26 ; elapsed = 00:02:45 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1402b2642

Time (s): cpu = 00:04:28 ; elapsed = 00:02:46 . Memory (MB): peak = 2383.609 ; gain = 220.570
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.845 | TNS=-124.811| WHS=0.015  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: e0b57e63

Time (s): cpu = 00:04:28 ; elapsed = 00:02:46 . Memory (MB): peak = 2383.609 ; gain = 220.570
Phase 6 Post Hold Fix | Checksum: e0b57e63

Time (s): cpu = 00:04:29 ; elapsed = 00:02:46 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 16.7298 %
  Global Horizontal Routing Utilization  = 20.4973 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Congestion Report
North Dir 1x1 Area, Max Cong = 86.4865%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X52Y83 -> INT_L_X52Y83
South Dir 1x1 Area, Max Cong = 88.2883%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X58Y107 -> INT_L_X58Y107
East Dir 1x1 Area, Max Cong = 85.2941%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X52Y28 -> INT_L_X52Y28
West Dir 1x1 Area, Max Cong = 98.5294%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X58Y107 -> INT_L_X58Y107
   INT_L_X58Y106 -> INT_L_X58Y106
   INT_L_X30Y105 -> INT_L_X30Y105
   INT_L_X36Y20 -> INT_L_X36Y20
   INT_R_X39Y9 -> INT_R_X39Y9

------------------------------
Reporting congestion hotspots
------------------------------
Direction: North
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 1
Direction: South
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 1
Direction: East
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 1
Direction: West
----------------
Congested clusters found at Level 0
Effective congestion level: 1 Aspect Ratio: 0.5 Sparse Ratio: 0.5

Phase 7 Route finalize | Checksum: 16e8abb3a

Time (s): cpu = 00:04:29 ; elapsed = 00:02:47 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 16e8abb3a

Time (s): cpu = 00:04:29 ; elapsed = 00:02:47 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1d7f81c01

Time (s): cpu = 00:04:32 ; elapsed = 00:02:50 . Memory (MB): peak = 2383.609 ; gain = 220.570

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=-0.845 | TNS=-124.811| WHS=0.015  | THS=0.000  |

WARNING: [Route 35-328] Router estimated timing not met.
Resolution: For a complete and accurate timing signoff, report_timing_summary must be run after route_design. Alternatively, route_design can be run with the -timing_summary option to enable a complete timing signoff at the end of route_design.
Phase 10 Post Router Timing | Checksum: 1d7f81c01

Time (s): cpu = 00:04:32 ; elapsed = 00:02:50 . Memory (MB): peak = 2383.609 ; gain = 220.570
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:04:32 ; elapsed = 00:02:50 . Memory (MB): peak = 2383.609 ; gain = 220.570

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
113 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:04:36 ; elapsed = 00:02:52 . Memory (MB): peak = 2383.609 ; gain = 220.570
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.019 . Memory (MB): peak = 2383.609 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 2383.609 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 2383.609 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file top_cnn_drc_routed.rpt -pb top_cnn_drc_routed.pb -rpx top_cnn_drc_routed.rpx
Command: report_drc -file top_cnn_drc_routed.rpt -pb top_cnn_drc_routed.pb -rpx top_cnn_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 2383.609 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file top_cnn_methodology_drc_routed.rpt -pb top_cnn_methodology_drc_routed.pb -rpx top_cnn_methodology_drc_routed.rpx
Command: report_methodology -file top_cnn_methodology_drc_routed.rpt -pb top_cnn_methodology_drc_routed.pb -rpx top_cnn_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file F:/MNIST_CNN_FPGA/MNIST_CNN_FPGA.runs/impl_1/top_cnn_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:17 ; elapsed = 00:00:10 . Memory (MB): peak = 2527.703 ; gain = 144.094
INFO: [runtcl-4] Executing : report_power -file top_cnn_power_routed.rpt -pb top_cnn_power_summary_routed.pb -rpx top_cnn_power_routed.rpx
Command: report_power -file top_cnn_power_routed.rpt -pb top_cnn_power_summary_routed.pb -rpx top_cnn_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
125 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:15 ; elapsed = 00:00:10 . Memory (MB): peak = 2527.703 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file top_cnn_route_status.rpt -pb top_cnn_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file top_cnn_timing_summary_routed.rpt -pb top_cnn_timing_summary_routed.pb -rpx top_cnn_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
CRITICAL WARNING: [Timing 38-282] The design failed to meet the timing requirements. Please see the timing summary report for details on the timing violations.
WARNING: [Timing 38-436] There are set_bus_skew constraint(s) in this design. Please run report_bus_skew to ensure that bus skew requirements are met.
INFO: [runtcl-4] Executing : report_incremental_reuse -file top_cnn_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file top_cnn_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file top_cnn_bus_skew_routed.rpt -pb top_cnn_bus_skew_routed.pb -rpx top_cnn_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force top_cnn.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg input cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[0].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[10].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[11].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[12].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[13].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[14].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[15].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[16].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[17].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[18].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[19].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[1].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[20].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[21].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[22].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[23].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[24].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[2].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[3].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[4].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[5].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[6].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[7].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[8].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[0].PE_Ch1/PE_MUL[9].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[0].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[10].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[11].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[12].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[13].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[14].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[15].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[16].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[17].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[18].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[19].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[1].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[20].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[21].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[22].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[23].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[24].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[2].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[3].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[4].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[5].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[6].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[7].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[8].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY1[1].PE_Ch1/PE_MUL[9].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[0].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[0].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[10].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[10].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[11].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[11].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[12].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[12].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[13].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[13].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[14].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[14].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[15].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[15].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[16].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[16].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[17].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[17].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[18].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[18].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[19].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[19].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[1].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[1].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[20].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[20].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[21].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[21].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[22].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[22].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[23].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[23].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[24].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[24].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[2].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[2].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[3].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[3].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[4].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[4].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[5].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[5].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[6].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[6].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[7].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[7].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[8].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[8].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[9].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[0].PE_Ch2/PE_MUL[9].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[0].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[0].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[10].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[10].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[11].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[11].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[12].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[12].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[13].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[13].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[14].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[14].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[15].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[15].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[16].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[16].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[17].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[17].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[18].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[18].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[19].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[19].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[1].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[1].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[20].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[20].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[21].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[21].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[22].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[22].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[23].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[23].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[24].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[24].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[2].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[2].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[3].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[3].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[4].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[4].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[5].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[5].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[6].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[6].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[7].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[7].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[8].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[8].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[9].MUL/result_reg multiplier stage cnn_core/PE_Array/PE_ARRAY2[1].PE_Ch2/PE_MUL[9].MUL/result_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/FC_Ctrl/next_state is a gated clock net sourced by a combinational pin cnn_core/FC_Ctrl/FSM_onehot_next_state_reg[7]_i_2/O, cell cnn_core/FC_Ctrl/FSM_onehot_next_state_reg[7]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/global_ctrl/Conv_Layer_reg[2]_i_2_n_0 is a gated clock net sourced by a combinational pin cnn_core/global_ctrl/Conv_Layer_reg[2]_i_2/O, cell cnn_core/global_ctrl/Conv_Layer_reg[2]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/global_ctrl/IMG_CNT_reg[4]_i_2_n_0 is a gated clock net sourced by a combinational pin cnn_core/global_ctrl/IMG_CNT_reg[4]_i_2/O, cell cnn_core/global_ctrl/IMG_CNT_reg[4]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/global_ctrl/Weight_base_reg[4]_i_2_n_0 is a gated clock net sourced by a combinational pin cnn_core/global_ctrl/Weight_base_reg[4]_i_2/O, cell cnn_core/global_ctrl/Weight_base_reg[4]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/global_ctrl/all_clear_reg_i_2_n_0 is a gated clock net sourced by a combinational pin cnn_core/global_ctrl/all_clear_reg_i_2/O, cell cnn_core/global_ctrl/all_clear_reg_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net cnn_core/global_ctrl/cnt_en_reg_i_2_n_0 is a gated clock net sourced by a combinational pin cnn_core/global_ctrl/cnt_en_reg_i_2/O, cell cnn_core/global_ctrl/cnt_en_reg_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC RTSTAT-10] No routable loads: 25 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gras.rsts/ram_empty_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwas.wsts/ram_full_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_inst/s_bscan_tms, cnn_core/crazy_top_ila/inst/ila_core_inst/u_ila_regs/U_XSDB_SLAVE/s_daddr_o[13], cnn_core/crazy_top_ila/inst/ila_core_inst/u_ila_regs/U_XSDB_SLAVE/s_daddr_o[14]... and (the first 15 of 23 listed).
WARNING: [DRC ZPS7-1] PS7 block required: The PS7 cell must be used in this Zynq design in order to enable correct default configuration.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 458 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./top_cnn.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
146 Infos, 211 Warnings, 1 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:31 ; elapsed = 00:00:21 . Memory (MB): peak = 2770.523 ; gain = 242.820
INFO: [Vivado_Tcl 4-395] Unable to parse hwdef file top_cnn.hwdef
INFO: [Common 17-206] Exiting Vivado at Wed Apr 30 08:51:02 2025...
